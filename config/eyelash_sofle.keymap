#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder_1: scroll_encoder_1 {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    scroll_encoder_2: scroll_encoder_2 {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

        tap-ms = <100>;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        require-prior-idle-ms = <200>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <35>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        require-prior-idle-ms = <200>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <29>;
    };

    combos {
        compatible = "zmk,combos";

        test {
            bindings = <&kp LEFT_GUI>;
            key-positions = <34 35>;
            layers = <0>;
        };
    };

    macros {
        macro1: macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp H &kp I &kp S &kp LS(I) &kp S &kp LS(N) &kp O &kp LS(G) &kp A &kp M &kp E &kp LS(B) &kp O &kp Y &kp EXCL>;
            label = "macro1";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC    &kp N1     &kp N2        &kp N3    &kp N4     &kp N5    &kp PG_UP  &kp N6  &kp N7           &kp N8           &kp N9     &kp N0     &kp BACKSPACE
&kp TAB    &kp Q      &kp W         &kp E     &kp R      &kp T     &kp PG_DN  &kp Y   &kp U            &kp I            &kp O      &kp P      &kp DEL
&kp CAPS   &kp A      &kp S         &kp D     &kp F      &kp G     &kp HOME   &kp H   &hmr LEFT_GUI J  &hmr LEFT_GUI K  &kp L      &kp SEMI   &kp ENTER
&kp LSHFT  &kp Z      &kp X         &kp C     &kp V      &kp B     &kp END    &kp N   &kp M            &kp UP           &kp COMMA  &kp DOT    &kp RIGHT_SHIFT
&macro1    &kp LCTRL  &kp LEFT_GUI  &kp LALT  &kp SPACE  &mo 1     &kp INS    &mo 2   &kp SPACE        &kp LEFT         &kp DOWN   &kp RIGHT
            >;

            sensor-bindings = <&scroll_encoder_2>;
            display-name = "Main";
        };

        layer_1 {
            bindings = <
&kp GRAVE        &kp F1           &kp F2           &kp F3           &kp F4           &kp F5    &kp C_PREVIOUS      &kp F6   &kp F7    &kp F8    &kp F9     &kp F10    &trans
&trans           &rgb_ug RGB_ON   &rgb_ug RGB_OFF  &trans           &trans           &trans    &kp C_NEXT          &kp F11  &kp F12   &trans    &kp MINUS  &kp EQUAL  &trans
&trans           &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &trans           &trans           &trans    &kp C_REWIND        &trans   &kp LBKT  &kp RBKT  &kp NUBS   &kp SQT    &trans
&trans           &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &trans    &kp C_FAST_FORWARD  &trans   &trans    &trans    &kp SLASH  &trans     &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans    &kp C_PLAY_PAUSE    &trans   &trans    &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            display-name = "Extra";
        };

        layer_2 {
            bindings = <
&trans          &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &mmv MOVE_UP     &mkp MB2  &mkp MB3  &trans  &trans  &trans  &trans
&trans          &bt BT_CLR        &bt BT_CLR_ALL     &trans        &trans        &trans               &mmv MOVE_DOWN   &mkp MB4  &mkp MB5  &trans  &trans  &trans  &trans
&trans          &out OUT_USB      &out OUT_BLE       &trans        &trans        &trans               &mmv MOVE_LEFT   &trans    &trans    &trans  &trans  &trans  &trans
&trans          &ext_power EP_ON  &ext_power EP_OFF  &trans        &trans        &trans               &mmv MOVE_RIGHT  &trans    &trans    &trans  &trans  &trans  &trans
&studio_unlock  &sys_reset        &soft_off          &bootloader   &out OUT_TOG  &ext_power EP_TOG    &mkp MB1         &trans    &trans    &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder_1>;
            display-name = "System";
        };
    };
};
